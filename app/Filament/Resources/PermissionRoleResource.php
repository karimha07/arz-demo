<?php

namespace App\Filament\Resources;

use App\Filament\Resources\PermissionRoleResource\Pages;
use App\Filament\Resources\PermissionRoleResource\RelationManagers;
use App\Models\Department;
use App\Models\PermissionRole;
use App\Models\Stock;
use App\Models\StockItem;
use App\Models\User;
use Filament\Forms;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\TextInput;
use Filament\Resources\Form;
use Filament\Resources\Resource;
use Filament\Resources\Table;
use Filament\Tables;
use Filament\Tables\Columns\SelectColumn;
use Filament\Tables\Columns\TextColumn;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class PermissionRoleResource extends Resource
{
    protected static ?string $model = PermissionRole::class;

    protected static ?string $navigationIcon = 'heroicon-o-collection';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Select::make('model')->options([
                   Department::class =>  'Department',
                   Stock::class =>  'Stock',
                    StockItem::class => 'Stock item',
                   User::class =>  'User'
                ]),
                Select::make('role_id')
                    ->relationship('role', 'name'),
                Select::make('permission_id')
                    ->relationship('permission', 'name')
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                TextColumn::make('model'),
                TextColumn::make('role.name'),
                TextColumn::make('permission.name'),
            ])
            ->filters([
                //
            ])
            ->actions([
//                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
//                Tables\Actions\DeleteBulkAction::make(),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\CreatePermissionRole::route('/create'),
//            'create' => Pages\CreatePermissionRole::route('/create'),
//            'edit' => Pages\EditPermissionRole::route('/{record}/edit'),
        ];
    }

    public static function canEdit(Model $record): bool
    {
        return false; // TODO: Change the autogenerated stub
    }

    public static function canView(Model $record): bool
    {
        return false; // TODO: Change the autogenerated stub
    }
}
